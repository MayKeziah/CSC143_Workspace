package numbers;

public class Complex {
	private double im;
	private double re;

	/**
	 * Constructor: default, all values set to zero
	 * */
	public Complex() {
		this(0, 0);
	}
	
	/**
	 * Constructor: 
	 * @param re the real part of the complex number
	 * the imaginary part is set to zero
	 * */
	public Complex(double re) {
		this(re, 0);
	}
	
	/**
	 * Constructor: 
	 * @param re the real part of the complex number
	 * @param im the imaginary part of the complex number
	 * */
	public Complex(double re, double im){
		this.im = im;
		this.re = re;
	}
	
	/**
	 * @param c2 the complex number to add to this complex number
	 * @return a new complex number representing the addition of this number and the given number
	 * */
	public Complex addition(Complex c2) {
		return new Complex(this.re + c2.re, this.im + c2.im);
	}
	
	/**
	 * @param c2 the complex number to divide with this complex number by
	 * @return a new complex number representing the quotient of this number divided by the given number
	 * */
	public Complex division(Complex c2) {
		double aNumer = this.re * c2.re + this.im * c2.im;
		double bNumer = this.im * c2.re - this.re * c2.im;
		double denom  = Math.pow(c2.re, 2) + Math.pow(c2.im, 2);
		if (denom == 0) {
			throw new ArithmeticException("division by Zero");
		}
		return new Complex(aNumer/denom, bNumer/denom);
	}

	/**
	 * @return the imaginary part of the complex number (b)
	 * */
	public double imaginaryPart() {
		return im;
	}

	/**
	 * @param c2 the complex number to multiply with this complex number
	 * @return a new complex number representing the product of this number and the given number
	 * */
	public Complex multiplication(Complex c2) {
		double a = this.re * c2.re - this.im * c2.im;
		double b = this.im * c2.re + this.re * c2.im;
		return new Complex(a, b);
	}

	/**
	 * @return the real part of the complex number (a)
	 * */
	public double realPart() {
		return re;
	}

	/**
	 * @param c2 the complex number to subtract from this complex number
	 * @return a new complex number representing the difference between the two numbers
	 * */
	public Complex subtraction(Complex c2) {
		return new Complex(this.re - c2.re, this.im - c2.im);
	}
	
	/**
	 * Method: toString() 
	 * @return a String representation of the complex number stored
	 * */
	public String toString() {
		if (im == 0) {
			return "(" + re + ")";
		}
		else {
			return "(" + re + " + " + im + "i)";
		}
	}

}
